name: CI

on:
  push:
    branches:
      - master
      - develop

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.1
      - name: Ruby gem cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install dependencies
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 2
      - name: Run style checks
        run: bin/rubocop --parallel
      - name: Run best practice checks
        run: |
          bin/reek
      - name: Run vulnerability checks
        run: bin/brakeman -q -w2

  test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:4
        ports: ["27017:27017"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.1
      - name: Ruby gem cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install dependencies
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 10.20.1
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: yarn install --pure-lockfile
      - name: Seed test database
        env:
          RAILS_ENV: test
        run: bin/rails db:seed
      - name: Run tests
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: bin/rspec
  deploy:
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    env:
      WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
    steps:
      - name: Trigger staging webhook
        if: github.ref == 'refs/heads/develop'
        env: 
          WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_STAGING }}
        run: |
          curl -X POST \
          "$WEBHOOK_URL&token=$WEBHOOK_TOKEN" \
          -H 'Content-Length: 2' \
          -H 'Content-Type: application/json; charset=utf-8' \
          -d '{}'
      - name: Trigger production webhook
        if: github.ref == 'refs/heads/master'
        env: 
          WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_PRODUCTION }}
        run: |
          curl -X POST \
          "$WEBHOOK_URL&token=$WEBHOOK_TOKEN" \
          -H 'Content-Length: 2' \
          -H 'Content-Type: application/json; charset=utf-8' \
          -d '{}'
